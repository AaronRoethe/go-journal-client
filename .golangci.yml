#
run:
  concurrency: 4
  deadline: 5m
  issues-exit-code: 1

  # which dirs to skip: they won't be analyzed;
  # can use regexp here: generated.*, regexp is applied on full path;
  # default value is empty list, but next dirs are always skipped independently
  # from this option's value:

  skip-dirs:
    - artifacts
    - bin
    - scripts

modules-download-mode: readonly

# all available settings of specific linters
linters-settings:
  depguard:
    list-type: blacklist
    include-go-root: false
    packages-with-error-message:
      # specify an error message to output when a blacklisted package is used
  errorlint:
    # Check whether fmt.Errorf uses the %w verb for formatting errors. See the readme for caveats
    errorf: true
    # Check for plain type assertions and type switches
    asserts: true
    # Check for plain error comparisons
    comparison: true
  exhaustive:
    default-signifies-exhaustive: true
  forbidigo:
    # Forbid the following identifiers (identifiers are written using regexp):
    forbid:
      - ^print.*$
      - 'fmt\.Print.*'
    # Exclude godoc examples from forbidigo checks.  Default is true.
    exclude_godoc_examples: true
  funlen:
    lines: 100
    statements: 60
  goconst:
    # minimal length of string constant, 3 by default
    min-len: 3
    # minimal occurrences count to trigger, 3 by default
    min-occurrences: 3
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - unnamedResult
  gocyclo:
    # minimal code complexity to report, 30 by default (but we recommend 10-20)
    min-complexity: 15
  goimports:
    # put imports beginning with prefix after 3rd-party packages;
    # it's a comma-separated list of prefixes
    local-prefixes: github.com/AaronRoethe/go-journal-client
  golint:
    # minimal confidence for issues, default is 0.8
    min-confidence: 0.8
  gomnd:
    settings:
      mnd:
        # the list of enabled checks, see https://github.com/tommy-muehle/go-mnd/#checks for description.
        ignored-functions: [make]
        checks: [argument, case, condition, operation, return, assign]

  gomoddirectives:
    # Allow local `replace` directives. Default is false.
    replace-local: false
  gosimple:
    # Select the Go version to target. The default is '1.13'.
    go: "1.20"
    # https://staticcheck.io/docs/options#checks
    checks: ["all"]
  govet:
    # report about shadowed variables
    check-shadowing: true
  lll:
    # max line length, lines longer will be reported. Default is 120.
    # '\t' is counted as 1 character by default, and can be changed with the tab-width option
    line-length: 132
    # tab width in spaces. Default to 1.
    tab-width: 1
  maligned:
    # print struct with more effective memory layout or not, false by default
    suggest-new: true
  misspell:
    locale: US
  unparam:
    # Inspect exported functions, default is false. Set to true if no external program/library imports your code.
    # XXX: if you enable this setting, unparam will report a lot of false-positives in text editors:
    # if it's called for subdir of a project it can't find external interfaces. All text editor integrations
    # with golangci-lint call it on a directory with the changed file.
    check-exported: false
  unused:
    # treat code as a program (not a library) and report unused exported identifiers; default is false.
    # XXX: if you enable this setting, unused will report a lot of false-positives in text editors:
    # if it's called for subdir of a project it can't find funcs usages. All text editor integrations
    # with golangci-lint call it on a directory with the changed file.
    check-exported: false
  nakedret:
    max-func-lines: 30
  prealloc:
    simple: true

linters:
  enable:
    - bodyclose
    - depguard
    - dogsled
    - errcheck
    - exportloopref
    - exhaustive
    - funlen
    - gochecknoinits
    - goconst
    - gocritic
    - gocyclo
    - gofumpt
    - goimports
    - gomnd
    - gosec
    - gosimple
    - govet
    - ineffassign
    - lll
    - misspell
    - nakedret
    - noctx
    - nolintlint
    - revive
    - rowserrcheck
    - staticcheck
    - stylecheck
    - sqlclosecheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - whitespace
  disable:
    - deadcode
    - gofmt # we use gofumpt instead
    - scopelint
    - structcheck
    - varcheck
  enable-all: false
  disable-all: false
  presets:
    - bugs
    - unused
  fast: false

issues:
  # List of regexps of issue texts to exclude, empty list by default.
  # But independently from this option we use default exclude patterns,
  # it can be disabled by `exclude-use-default: false`. To list all
  # excluded by default patterns execute `golangci-lint run --help`
  # exclude:
  #   - abcdef

  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: "_test.go"
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - gocyclo
        - unparam
        - funlen

    # # Maximum count of issues with the same text. Set to 0 to disable. Default is 3.
  max-same-issues: 0